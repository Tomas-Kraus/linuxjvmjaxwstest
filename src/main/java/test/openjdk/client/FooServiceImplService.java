
package test.openjdk.client;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "FooServiceImplService", targetNamespace = "http://openjdk.test/", wsdlLocation = "classpath:test.wsdl")
public class FooServiceImplService
        extends Service {

    private final static URL FOOSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException FOOSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName FOOSERVICEIMPLSERVICE_QNAME = new QName("http://openjdk.test/", "FooServiceImplService");

    static {
        FOOSERVICEIMPLSERVICE_WSDL_LOCATION = FooServiceImplService.class.getClassLoader().getResource("test.wsdl");
        FOOSERVICEIMPLSERVICE_EXCEPTION = null;
    }

    public FooServiceImplService() {
        super(__getWsdlLocation(), FOOSERVICEIMPLSERVICE_QNAME);
    }

    public FooServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FOOSERVICEIMPLSERVICE_QNAME, features);
    }

    public FooServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, FOOSERVICEIMPLSERVICE_QNAME);
    }

    public FooServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FOOSERVICEIMPLSERVICE_QNAME, features);
    }

    public FooServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FooServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns FooService
     */
    @WebEndpoint(name = "FooServiceImplPort")
    public FooService getFooServiceImplPort() {
        return super.getPort(new QName("http://openjdk.test/", "FooServiceImplPort"), FooService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns FooService
     */
    @WebEndpoint(name = "FooServiceImplPort")
    public FooService getFooServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://openjdk.test/", "FooServiceImplPort"), FooService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FOOSERVICEIMPLSERVICE_EXCEPTION != null) {
            throw FOOSERVICEIMPLSERVICE_EXCEPTION;
        }
        return FOOSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
